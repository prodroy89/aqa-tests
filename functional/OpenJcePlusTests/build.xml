<?xml version="1.0"?>

<!--
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
-->

<project name="OpenJcePlus tests" default="build" basedir=".">
	<taskdef resource="net/sf/antcontrib/antlib.xml" />
	<description>
		OpenJCEPlus Tests
	</description>

	<!-- set global properties for this build -->
	<property name="DEST" value="${BUILD_ROOT}/functional/OpenJcePlusTests" />

	<!--Properties for this particular build-->
	<property name="src" location="./OpenJCEPlus/src/" />
	<property name="build" location="./bin" />
	<property name="LIB" value="junit4,hamcrest_core,bcprov_jdk18on"/>
	<import file="${TEST_ROOT}/TKG/scripts/getDependencies.xml"/>
	<property environment="env" />

	<target name="openJcePlusTests.check">
		<condition property="openJcePlusTests.exists">
			<available file="OpenJCEPlus" type="dir"/>
		</condition>
	</target>

	<if>
		<isset property="env.OPENJCEPLUS_GIT_REPO"/>
		<then>
			<property name="openjceplusGitRepo" value="${env.OPENJCEPLUS_GIT_REPO}"/>
		</then>
		<else>
			<property name="openjceplusGitRepo" value="https://github.com/IBM/OpenJCEPlus.git"/>
		</else>
	</if>
	<if>
		<isset property="env.OPENJCEPLUS_GIT_BRANCH"/>
		<then>
			<property name="openjceplusGitBranch" value="${env.OPENJCEPLUS_GIT_BRANCH}"/>
		</then>
		<else>
			<property name="openjceplusGitBranch" value="java${JDK_VERSION}"/>
		</else>
	</if>

	<target name="getOpenJcePlusTests" depends="openJcePlusTests.check" unless="openJcePlusTests.exists">
		<getFileWithRetry file="OpenJCEPlus" command="git clone --depth 1 -q ${openjceplusGitRepo} -b ${openjceplusGitBranch} OpenJCEPlus"/>
		<checkGitRepoSha repoDir="OpenJCEPlus"/>
		<delete dir="./OpenJCEPlus/src/main" />
	</target>

	<target name="init">
		<mkdir dir="${DEST}" />
		<mkdir dir="${build}" />
	</target>

	<property name="addExports" value='--add-exports java.base/sun.security.internal.spec=openjceplus --add-exports java.base/sun.security.util=openjceplus,ALL-UNNAMED --add-exports java.base/sun.security.x509=openjceplus,ALL-UNNAMED --add-exports java.base/sun.security.pkcs=openjceplus,ALL-UNNAMED --add-exports java.base/sun.security.internal.interfaces=openjceplus --add-exports java.base/sun.util.logging=openjceplus --add-exports java.base/jdk.internal.logger=openjceplus --add-exports openjceplus/com.ibm.crypto.plus.provider.ock=ALL-UNNAMED --add-exports openjceplus/com.ibm.misc=ALL-UNNAMED' />

	<target name="compile" depends="init,getDependentLibs,getOpenJcePlusTests" description="Using java ${JDK_VERSION} to compile the source  ">
		<echo>Ant version is ${ant.version}</echo>
		<echo>============COMPILER SETTINGS============</echo>
		<echo>===fork:                         yes</echo>
		<echo>===executable:                   ${compiler.javac}</echo>
		<echo>===debug:                        on</echo>
		<echo>===destdir:                      ${DEST}</echo>
		<javac srcdir="${src}" destdir="${build}" debug="true" fork="true" executable="${compiler.javac}" includeAntRuntime="false" encoding="ISO-8859-1">
			<compilerarg line='-Xlint:all ${addExports}' />
			<src path="${src}" />
			<classpath>
				<pathelement location="${LIB_DIR}/junit4.jar" />
				<pathelement location="${LIB_DIR}/hamcrest-core.jar" />
				<pathelement location="${LIB_DIR}/bcprov-jdk18on.jar" />
			</classpath>
		</javac>
	</target>

	<target name="dist" depends="compile" description="generate the distribution">
		<jar jarfile="${DEST}/openjceplus-tests.jar" filesonly="true">
			<fileset dir="${build}" />
			<fileset dir="${src}/../../" includes="*.properties,*.xml" />
		</jar>
		<copy todir="${DEST}">
			<fileset dir="${src}/../../" includes="*.xml,*.mk" />
			<fileset dir="${LIB_DIR}/" includes="junit4.jar" />
			<fileset dir="${LIB_DIR}/" includes="hamcrest-core.jar" />
			<fileset dir="${LIB_DIR}/" includes="bcprov-jdk18on.jar" />
		</copy>
	</target>

	<target name="clean" depends="dist" description="clean up">
		<!-- Delete the ${build} directory trees -->
		<delete dir="${build}" />
	</target>

	<target name="build" >
		<if>
			<or>
				<contains string="${TEST_FLAG}" substring="OpenJcePlusTests"/>
				<and>
					<equals arg1="${JDK_VENDOR}" arg2="ibm" />
					<equals arg1="${JDK_IMPL}" arg2="openj9" />
					<not>
						<matches string="${JDK_VERSION}" pattern="^(8)$$" />
					</not>
					<or>
						<contains string="${SPEC}" substring="aix_ppc-64"/>
						<contains string="${SPEC}" substring="linux_ppc-64_le"/>
						<contains string="${SPEC}" substring="linux_x86-64"/>
						<contains string="${SPEC}" substring="win_x86-64"/>
						<contains string="${SPEC}" substring="linux_390-64"/>
					</or>
				</and>
			</or>
			<then>
				<antcall target="clean" inheritall="true" />
			</then>
		</if>
		
	</target>
</project>
